<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<context:annotation-config />
	
	<!-- 引入属性文件 -->
	<!--<context:property-placeholder location="classpath:hibernate.properties" />-->

    <context:component-scan base-package="org.gaixie.micrite.patrolRiverSummary.service.impl,org.gaixie.micrite.check.service.impl,org.gaixie.micrite.enterprise.service.impl,org.gaixie.micrite.car.service.impl,org.gaixie.micrite.dic.service.impl"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <!-- Hibernate SessionFactory definition using exposed dataSource -->
    <!-- hibernate.properties and hibernate.cfg.xml will be loaded on startup -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="org/gaixie/micrite/beans" />
		<!--<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>-->
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- ~~~~~~~~~ Connection Info ~~~~~~~~~~ -->
        <!-- hsqldb -->
       <!--  
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:micritedb" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		-->

        <!-- mysql com.p6spy.engine.spy.P6SpyDriver-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <!--property name="driverClassName" value="com.p6spy.engine.spy.P6SpyDriver" /-->
        <property name="url" value="jdbc:mysql://localhost:3306/rivmsdb" />
        <property name="username" value="root" />
        <property name="password" value="sa" />
		<!--<property name="hbm2ddl.auto" value="update" />-->  
        <!-- derby  please replace {ProjectHome} with your path of installation-->
        <!--        
        <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
        <property name="url" value="jdbc:derby:{ProjectHome}/micritedb" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        -->
                
        <!-- postgresql -->
        <!--         
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/micritedb" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        -->
        
        <!-- oracle -->
        <!--         
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:micritedb" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        -->
                        
		<!-- Connection Pooling Info -->
        <property name="maxActive" value="20" />
        <property name="maxIdle" value="10" />
        <property name="maxWait" value="1000" />
        <property name="defaultAutoCommit" value="false" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="60" />
        <property name="logAbandoned" value="true" />
    </bean>
    
    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!--  Transaction interceptor  -->
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager" ref="transactionManager" />
         <property name="transactionAttributes">
              <props>
                   <prop key="*">PROPAGATION_REQUIRED</prop>
              </props>
         </property>
    </bean>

    <!-- BeanName auto proxy to define the interceptor -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
         <property name="beanNames">
              <list>
                   <value>*Service</value>
              </list>
         </property>
         <property name="interceptorNames">
              <list>
                   <value>transactionInterceptor</value>
              </list>
         </property>
     </bean>
<!--
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="assembler" ref="assembler"/>
        <property name="namingStrategy" ref="namingStrategy"/>
        <property name="autodetect" value="true"/>
        <property name="beans">
           <map>
              <entry key="org.hibernate:name=Statistics"  value-ref="hibernateMBean"/>
           </map>
        </property>
    </bean>

    <bean id="hibernateMBean" class="org.hibernate.jmx.StatisticsService">
       <property name="sessionFactory" ref="sessionFactory"/>
       <property name="statisticsEnabled" value="true"/>
    </bean>

    <bean id="jmxAttributeSource"
          class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>
-->
    <!-- will create management interface using annotation metadata 
    <bean id="assembler"
          class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>
    -->
    <!-- will pick up the ObjectName from the annotation 
    <bean id="namingStrategy"
          class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>
    -->
    <!-- BeanPostProcessor detect @Autowired flag to inject -->   
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
</beans>